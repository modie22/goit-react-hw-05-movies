{"version":3,"file":"static/js/415.d02b967c.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","components/MoviesList/MoviesList.styled.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\nimport { LiStyle, UlStyle, WrapCardStyle, } from \"./MoviesList.styled\";\n\nconst MoviesList = ({ films }) => {\n    const location = useLocation();\n    return <UlStyle>\n        {films.map(({ id, title, poster_path }) =>\n            <Link to={`/movies/${id}`}  state={{ from: location }} >\n                <LiStyle key={id}>\n                    <img src={poster_path ?\n                        `http://image.tmdb.org/t/p/w154${poster_path}` :\n                        'https://static.vecteezy.com/system/resources/thumbnails/016/808/173/small/camera-not-allowed-no-photography-image-not-available-concept-icon-in-line-style-design-isolated-on-white-background-editable-stroke-vector.jpg'}\n                        alt={title} width=\"154\" height=\"231\" />\n                    <WrapCardStyle>\n                        <h3>{title}</h3>\n                    </WrapCardStyle>\n                </LiStyle>\n            </Link>\n        )}\n    </UlStyle>\n};\n\n\nexport default MoviesList;","import styled from 'styled-components';\n\nexport const UlStyle = styled.ul`\n    display: flex;\n    gap: 30px;\n    align-items: center;\n    flex-wrap: wrap;\n`;\nexport const LiStyle = styled.li`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 5px;\n    width: 154px;\n    cursor: pointer;\n    overflow: hidden;\n`;\n\nexport const WrapCardStyle = styled.div`\n    height: 20px;\n    display: flex;\n    gap: 5px;\n    flex-direction: column;\n`\n\n","import { Loader } from \"components/Loader/Loader\";\nimport MoviesList from \"components/MoviesList/MoviesList\";\nimport { useEffect, useState } from \"react\";\nimport { fetchMovies, onFetchError } from \"services/api\";\nimport { SectionStyle } from \"./Pages.styled\";\n\nconst endPoint = \"/trending/movie/day\";\n\nconst Home = () => {\n    const [loading, setLoading] = useState(true);\n    const [films, setFilms] = useState([]);\n    \n    useEffect(() => {\n        if (films.length > 0) {\n            return;\n        };\n        fetchMovies(endPoint)\n            .then(data => {\n                setFilms(data.results);\n            })\n            .catch(onFetchError)\n            .finally(() => setLoading(false));\n    }, [films]);\n\n    return <SectionStyle>\n        <h2>Movies in trend</h2>\n        {loading && <Loader />}\n        <MoviesList films={films} />\n    </SectionStyle>\n};\n\nexport default Home;","import axios from \"axios\";\nimport { Notify } from \"notiflix\";\n\nconst URL = \"https://api.themoviedb.org/3\";\nconst KEY = \"43596775cda6588db61d2519acdb98b6\";\nexport const paramsForNotify = {\n  position: 'center-center',\n  timeout: 3000,\n  width: '400px',\n  fontSize: '24px'\n};\n\nexport async function fetchMovies(endPoint) {\n    const url = `${URL}${endPoint}?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport async function fetchSearchMovies(endPoint, query) {\n    const url = `${URL}${endPoint}?api_key=${KEY}&query=${query}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport async function fetchMovieDetails(endPoint, movieId) {\n    const url = `${URL}${endPoint}/${movieId}?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport async function fetchMovieCast(endPoint, movieId) {\n    const url = `${URL}${endPoint}/${movieId}/credits?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport async function fetchMovieReviews(endPoint, movieId) {\n    const url = `${URL}${endPoint}/${movieId}/reviews?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport function onFetchError() {\n    Notify.failure('Oops! Something went wrong! Try reloading the page or make another choice!', paramsForNotify);\n};\n"],"names":["_ref","films","location","useLocation","_jsx","UlStyle","children","map","_ref2","id","title","poster_path","Link","to","concat","state","from","_jsxs","LiStyle","src","alt","width","height","WrapCardStyle","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","setFilms","useEffect","length","fetchMovies","then","data","results","catch","onFetchError","finally","SectionStyle","Loader","MoviesList","URL","KEY","paramsForNotify","position","timeout","fontSize","_x","_fetchMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","endPoint","url","response","_context","prev","next","axios","sent","abrupt","stop","fetchSearchMovies","_x2","_x3","_fetchSearchMovies","_callee2","query","_context2","fetchMovieDetails","_x4","_x5","_fetchMovieDetails","_callee3","movieId","_context3","fetchMovieCast","_x6","_x7","_fetchMovieCast","_callee4","_context4","fetchMovieReviews","_x8","_x9","_fetchMovieReviews","_callee5","_context5","Notify"],"sourceRoot":""}